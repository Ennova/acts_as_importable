= acts_as_importable

In controller add:
=================
  acts_as_importable :material
  OR
  acts_as_importable

  NOTE: the only argument this method takes is the model name which is also optional. It will use the controller name to find the model name if the model name is not supplied.

In model add:
============
  acts_as_importable :import_fields => ["mark", "quantity", "work_element.name", "bay", "location_x",
                                        "location_y", "location_z", "drawing.name", "additional_drawings",
                                        "description", "length", "mass", "material_type.name", "tag_number"]

  NOTE: You have to set the fields that you want to import for that model and if there is a field which has to be calculation or generated eg. 'work_element.name'. You have to define a method like the following and it will be called while importing the data:

  def assign_work_element(data_row)
    name = data_row[2].strip
    bay = data_row[3].strip
    work_element = WorkElement.find_by_name_and_bay(name, bay)
    self.work_element_id = work_element.id if work_element
  end

  NOTE: Any field which has a '.' in its name require a method with name like "assign_#{name_of_the_field}". Also as a parameter you get the entire row from the csv file. So you can operate on multiple columns to generate the value for this field.

  NOTE: Another example of the method above:

  def assign_drawing(data_row)
    drawing = Drawing.find_by_name(data_row[7].strip)
    self.drawing_id = drawing.id if drawing
  end

  NOTE: Above method 'drawing.name' field require some processing.

  NOTE: Also you can specify a different list of field to export if you want as following:
  acts_as_importable :import_fields => ["mark", "quantity", "work_element.name", "bay", "location_x",
                                        "location_y", "location_z", "drawing.name", "additional_drawings",
                                        "description", "length", "mass", "material_type.name", "tag_number"],
                     :export_fields => ["mark", "quantity", "work_element.name", "bay", "location_x",
                                        "description", "length", "mass", "material_type.name", "tag_number"]

Routes to be added:
==================
Routes required to be added for controllers:
 :import, :get
 :export, :get
 :upload, :post

== Contributing to acts_as_importable
 
* Check out the latest master to make sure the feature hasn't been implemented or the bug hasn't been fixed yet
* Check out the issue tracker to make sure someone already hasn't requested it and/or contributed it
* Fork the project
* Start a feature/bugfix branch
* Commit and push until you are happy with your contribution
* Make sure to add tests for it. This is important so I don't break it in a future version unintentionally.
* Please try not to mess with the Rakefile, version, or history. If you want to have your own version, or is otherwise necessary, that is fine, but please isolate to its own commit so I can cherry-pick around it.

== Copyright

Copyright (c) 2010 Jagdeep Singh. See LICENSE.txt for
further details.

